#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W      &kp E       &kp R                 &kp T                                                           &kp Y            &kp U  &kp I     &kp O     &kp P
&kp A         &kp S      &kp D       &kp F                 &kp G        &trans                       &msc MOVE_Y(5)        &kp H            &kp J  &kp K     &kp L     &kp ENTER
&kp Z         &kp X      &kp C       &kp V                 &kp B        &trans                       &msc MOVE_Y(-5)       &kp N            &kp M  &mkp MB1  &mkp MB2  &mt LEFT_SHIFT MINUS
&kp LEFT_WIN  &kp COMMA  &kp PERIOD  &lt_to_layer_0 1 TAB  &lt 2 SPACE  &mt LEFT_ALT LANGUAGE_2      &mt LCTRL LANGUAGE_1  &lt 2 BACKSPACE                             &lt 3 ESCAPE
            >;
        };

        FUNCTION {
            bindings = <
&kp PERCENT  &kp DOLLAR  &kp AMPERSAND  &kp LS(NUMBER_6)  &kp SLASH                          &kp BACKSLASH   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LESS_THAN   &kp GREATER_THAN
&kp AT_SIGN  &kp HASH    &kp ASTERISK   &kp PLUS          &kp EQUAL     &trans      &kp F13  &kp UNDERSCORE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON   &kp COLON
&trans       &kp TILDE   &trans         &kp EXCLAMATION   &kp QUESTION  &trans      &trans   &kp PIPE        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp APOSTROPHE  &kp DOUBLE_QUOTES
&trans       &trans      &trans         &trans            &trans        &trans      &trans   &trans                                                                       &trans
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans                                                       &kp ENTER    &kp HOME   &kp UP    &kp END    &kp LEFT_ALT
&kp NUMBER_0                &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans          &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp PAGE_UP  &kp LEFT   &kp DOWN  &kp RIGHT  &kp PAGE_DOWN
&mt LEFT_SHIFT KP_NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LEFT_SHIFT  &kp EQUAL                    &trans          &kp LEFT     &kp RIGHT  &mkp MB1  &mkp MB2   &mkp MB4
&kp LEFT_WIN                &trans        &trans        &trans        &trans          &trans                       &kp LCTRL       &kp DEL                                      &mkp MB5
            >;
        };

        ARROW {
            bindings = <
&trans  &kp F7  &kp F8  &kp F9  &kp F10                         &trans  &trans  &trans  &trans  &trans
&trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans      &trans     &trans  &trans  &trans  &trans  &trans
&trans  &kp F1  &kp F2  &kp F3  &kp F12  &trans      &trans     &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans   &trans      &kp LCTRL  &trans                          &trans
            >;
        };
    };
};
